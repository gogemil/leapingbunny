<?php
/**
 * @file
 * CRM Core Devel.
 */

/**
 * Implements hook_menu().
 */
function crm_core_devel_menu() {
  $items['admin/structure/crm/devel'] = array(
    'title' => 'CRM Devel',
    'description' => 'Helper functions, pages, and blocks to assist Drupal developers.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_core_devel_admin_settings'),
    'file' => 'crm_core_devel.admin.inc',
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Exports contacts and activities to specified file.
 *
 * @param string $filename
 *   File name.
 */
function crm_core_devel_export($filename) {
  $filename = DRUPAL_ROOT . '/' . $filename;
  if (!empty($filename) && !is_file($filename)) {
    $export = array();

    $ids = db_select('crm_core_contact')
      ->fields('crm_core_contact', array('contact_id'))->execute()->fetchCol();
    $contacts = crm_core_contact_load_multiple($ids);
    foreach ($contacts as $contact) {
      $export['crm_core_contact'][$contact->contact_id] = entity_export('crm_core_contact', $contact);
    }
    $ids = db_select('crm_core_activity')
      ->fields('crm_core_activity', array('activity_id'))->execute()
      ->fetchCol();
    $activities = crm_core_activity_load_multiple($ids);
    foreach ($activities as $activity) {
      unset($activity->activity_id);
      unset($activity->revision_id);
      unset($activity->activity_type_id);
      $export['crm_core_activity'][] = entity_export('crm_core_activity', $activity);
    }
    $file = new SplFileObject($filename, 'a');
    $file->fwrite(var_export($export, TRUE));
  }
}

function _generate_activities() {

  $content_uuids = array(
    'simple_reg_form' => 'c4e0254b-e193-4f95-b843-fde40151fd81',
    'simple_single_form' => '52a80050-d98f-4bbf-90e8-9526dd3c77a1',
    'simple_many_form' => '8cbf5460-9633-4fcd-a730-c5832c19e5f0',
    'simple_quantity_form' => '37106c78-84c8-4e74-a387-5c04b03f5375',
    'phonebank' => 'e340d2ab-485b-4e68-b35c-c4e07a7b80c5',
  );

  // Getting local IDs from universal.
  $nids = entity_get_id_by_uuid('node', $content_uuids);
  $contact_ids = range(2, 11, 1);

  foreach ($contact_ids as $contact_id) {
    foreach ($nids as $nid) {
      $activity = entity_create('crm_core_activity', array('type' => 'cmcev_event_registration'));
      $activity->title = 'On-line event registration';
      $aw = entity_metadata_wrapper('crm_core_activity', $activity);
      $aw->field_cmcev_source = 'Online Registration';
      $aw->field_cmcev_status = 'Registered';
      $aw->field_activity_participants[] = $contact_id;
      $aw->field_cmcev_amount = mt_rand(0, 1000);
      $aw->field_cmcev_event = $nid;
      $aw->field_cmcev_public = $nid % 2;
      $activity->field_activity_date = _set_activity_date();
      $activity->field_cmcev_reg_date = _set_activity_date();
      $aw->save();
    }
  }

}

function _set_activity_date() {
  $days_from_now = 30;
  $tz = variable_get('date_default_timezone', 'UTC');
  $format = 'Y-m-d H:i:s';

  $days = mt_rand(1, $days_from_now);
  $ts = time() - $days * 24 * 60 * 60;
  $date_str = format_date($ts, 'custom', $format, $tz);

  $field = array(
    LANGUAGE_NONE => array(
      array(
        'value' => $date_str,
        'timezone' => $tz,
        'timezone_db' => $tz,
        'date_type' => 'datetime',
      ),
    ),
  );

  return $field;
}
